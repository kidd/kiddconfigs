
start_debug
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan.debug
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('155'), 'on_close': function('154'), 'on_select': function('157'), 'on_close_with_tab_page': function('156')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 128
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('155'), 'on_close': function('154'), 'on_select': function('158'), 'on_close_with_tab_page': function('156')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 14
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget14
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 129
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 14
[ base.select >> window#select] ...
[ base.select] id = 14
[ window#load_selected] ...
[ window#select] id = 14
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 130
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_normal_move ; arguments:
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget5
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 5
[ base.close] closing.. id = 5
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget14
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget14
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 5
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan.debug
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan.debug
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 14
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('169'), 'on_close': function('168'), 'on_select': function('171'), 'on_close_with_tab_page': function('170')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 131
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('169'), 'on_close': function('168'), 'on_select': function('172'), 'on_close_with_tab_page': function('170')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget4
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 14
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget14
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 132
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 14
[ base.select >> window#select] ...
[ base.select] id = 14
[ window#load_selected] ...
[ window#select] id = 14
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 133
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_normal_move ; arguments:
[ on_buffer_win_leave] widget for close set up
[ on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ on_buffer_win_leave] ...
[ on_buffer_win_leave] widget for close set up
[ on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Result window; method:on_close_with_tab_page ; arguments:
[ on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ on_buffer_win_leave] ...
[ on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ on_window_leave] call object.on_tab_leave()
[ on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ on_window_leave >> common_widget_callback.on_tab_leave] ...
[ on_window_leave] ...
[ on_any_window_enter] name: widget/base.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:widget/base.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: widget/base.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:windows
[ on_any_window_enter] name: oscan/extractor/changes.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/extractor/changes.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: widget/base.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:widget/base.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: widget/base.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ ] create new tab page
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('169'), 'on_close': function('168'), 'on_select': function('171'), 'on_close_with_tab_page': function('170')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select window to be active', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 134
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('169'), 'on_close': function('168'), 'on_select': function('172'), 'on_close_with_tab_page': function('170')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select window to be active', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget4
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 15
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget15
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 135
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 15
[ base.select >> window#select] ...
[ base.select] id = 15
[ window#load_selected] ...
[ window#select] id = 15
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 136
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_normal_move ; arguments:
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 4
[ base.close] closing.. id = 4
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget15
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget15
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 4
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 15
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_window_enter] name: widget/base.vim
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] buffer name:widget/base.vim
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:buffers
[ ] create new tab page
[ on_any_window_enter] name: widget/base.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('169'), 'on_close': function('168'), 'on_select': function('171'), 'on_close_with_tab_page': function('170')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select buffer to edit', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 137
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('169'), 'on_close': function('168'), 'on_select': function('172'), 'on_close_with_tab_page': function('170')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select buffer to edit', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 15
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget15
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 138
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 15
[ base.select >> window#select] ...
[ base.select] id = 15
[ window#load_selected] ...
[ window#select] id = 15
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 139
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget15
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ s:result_select >> window#save_selected] ...
[ s:result_select >> base.select] selecting...
[ s:result_select >> base.select >> window#select] id = 15
[ s:result_select >> base.select >> window#select] ...
[ s:result_select >> base.select] id = 15
[ s:result_select >> window#load_selected] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Result window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ s:result_select >> on_window_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ s:result_select >> on_window_leave] call object.on_tab_leave()
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ s:result_select >> on_window_leave] ...
[ s:result_select >> window#load_selected >> on_any_window_enter] name: widget/base.vim
[ s:result_select >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> window#load_selected >> on_any_window_enter] ...
[ s:result_select >> window#load_selected] ...
[ s:result_select >> on_any_buffer_enter] buffer name:widget/edit_line_window.vim
[ s:result_select >> on_any_buffer_enter] in_create_widget_state:0
[ s:result_select >> on_any_buffer_enter] b:widget not found
[ s:result_select >> on_any_buffer_enter] ...
[ s:result_select >> on_any_buffer_window_enter] name: widget/edit_line_window.vim
[ s:result_select >> on_any_buffer_window_enter] ...
[ s:result_select] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:file
[ ] call language_function "kinds" for "vim"
[ on_any_window_enter] name: widget/base.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:widget/base.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: widget/base.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:widget/base.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: widget/edit_line_window.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:widget/edit_line_window.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: widget/base.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:widget/base.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: widget/base.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:widget/base.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: widget/edit_line_window.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:widget/edit_line_window.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: widget/base.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:widget/base.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/eval.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/eval.txt
[ on_any_buffer_window_enter] ...
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/eval.txt
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/eval.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('183'), 'on_close': function('182'), 'on_select': function('185'), 'on_close_with_tab_page': function('184')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 140
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('183'), 'on_close': function('182'), 'on_select': function('186'), 'on_close_with_tab_page': function('184')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 16
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget16
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 141
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 16
[ base.select >> window#select] ...
[ base.select] id = 16
[ window#load_selected] ...
[ window#select] id = 16
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 142
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_normal_move ; arguments:
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget5
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 5
[ base.close] closing.. id = 5
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget16
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget16
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 5
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 16
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('211'), 'on_close': function('210'), 'on_select': function('213'), 'on_close_with_tab_page': function('212')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 143
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('211'), 'on_close': function('210'), 'on_select': function('214'), 'on_close_with_tab_page': function('212')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget4
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 16
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget16
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 144
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 16
[ base.select >> window#select] ...
[ base.select] id = 16
[ window#load_selected] ...
[ window#select] id = 16
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ ] call back for widget. name:Tag enter window; method:on_normal_move ; arguments:
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 145
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 4
[ base.close] closing.. id = 4
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget16
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget16
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 4
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 16
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('225'), 'on_close': function('224'), 'on_select': function('227'), 'on_close_with_tab_page': function('226')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 146
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('225'), 'on_close': function('224'), 'on_select': function('228'), 'on_close_with_tab_page': function('226')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 16
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget16
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 147
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 16
[ base.select >> window#select] ...
[ base.select] id = 16
[ window#load_selected] ...
[ window#select] id = 16
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ ] call back for widget. name:Tag enter window; method:on_normal_move ; arguments:
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget5
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 148
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 5
[ base.close] closing.. id = 5
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget16
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget16
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 5
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 16
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('225'), 'on_close': function('224'), 'on_select': function('227'), 'on_close_with_tab_page': function('226')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 149
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('225'), 'on_close': function('224'), 'on_select': function('228'), 'on_close_with_tab_page': function('226')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget4
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 16
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget16
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 150
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 16
[ base.select >> window#select] ...
[ base.select] id = 16
[ window#load_selected] ...
[ window#select] id = 16
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 151
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 4
[ base.close] closing.. id = 4
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget16
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget16
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 4
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 16
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:buffers
[ ] create new tab page
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('225'), 'on_close': function('224'), 'on_select': function('227'), 'on_close_with_tab_page': function('226')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select buffer to edit', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 152
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('225'), 'on_close': function('224'), 'on_select': function('228'), 'on_close_with_tab_page': function('226')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select buffer to edit', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 16
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget16
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 153
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 16
[ base.select >> window#select] ...
[ base.select] id = 16
[ window#load_selected] ...
[ window#select] id = 16
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget5
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 154
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 5
[ base.close] closing.. id = 5
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget16
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget16
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 5
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 16
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('239'), 'on_close': function('238'), 'on_select': function('241'), 'on_close_with_tab_page': function('240')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 155
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('239'), 'on_close': function('238'), 'on_select': function('242'), 'on_close_with_tab_page': function('240')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget4
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 16
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget16
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 156
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 16
[ base.select >> window#select] ...
[ base.select] id = 16
[ window#load_selected] ...
[ window#select] id = 16
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 157
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 4
[ base.close] closing.. id = 4
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget16
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget16
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 4
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 16
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('239'), 'on_close': function('238'), 'on_select': function('241'), 'on_close_with_tab_page': function('240')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 158
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('239'), 'on_close': function('238'), 'on_select': function('242'), 'on_close_with_tab_page': function('240')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 16
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget16
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 159
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 16
[ base.select >> window#select] ...
[ base.select] id = 16
[ window#load_selected] ...
[ window#select] id = 16
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 160
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_normal_move ; arguments:
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget5
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 5
[ base.close] closing.. id = 5
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget16
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget16
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 5
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 16
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:multiline_search
[ ] create new tab page
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('267'), 'on_close': function('266'), 'on_select': function('269'), 'on_close_with_tab_page': function('268')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Mutliline search "\<refresh_suggestion_list\>" in "/Users/mykolagolubyev/.vim/autoload/railmoon/oscan.vim"', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 161
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('267'), 'on_close': function('266'), 'on_select': function('270'), 'on_close_with_tab_page': function('268')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Mutliline search "\<refresh_suggestion_list\>" in "/Users/mykolagolubyev/.vim/autoload/railmoon/oscan.vim"', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget4
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 16
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget16
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 162
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 16
[ base.select >> window#select] ...
[ base.select] id = 16
[ window#load_selected] ...
[ window#select] id = 16
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 163
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 4
[ base.close] closing.. id = 4
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget16
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget16
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 4
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 16
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('267'), 'on_close': function('266'), 'on_select': function('269'), 'on_close_with_tab_page': function('268')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 164
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('267'), 'on_close': function('266'), 'on_select': function('270'), 'on_close_with_tab_page': function('268')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 16
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget16
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 165
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 16
[ base.select >> window#select] ...
[ base.select] id = 16
[ window#load_selected] ...
[ window#select] id = 16
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 166
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_normal_move ; arguments:
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget5
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 5
[ base.close] closing.. id = 5
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget16
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget16
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 5
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 16
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('281'), 'on_close': function('280'), 'on_select': function('283'), 'on_close_with_tab_page': function('282')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 167
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('281'), 'on_close': function('280'), 'on_select': function('284'), 'on_close_with_tab_page': function('282')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget4
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 16
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget16
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 168
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 16
[ base.select >> window#select] ...
[ base.select] id = 16
[ window#load_selected] ...
[ window#select] id = 16
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 169
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_normal_move ; arguments:
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 4
[ base.close] closing.. id = 4
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget16
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget16
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 4
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 16
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: oscan.vim
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/record_browser.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: oscan/record_browser.vim
[ on_any_buffer_window_enter] ...
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan/record_browser.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/record_browser.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan/record_browser.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/record_browser.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: oscan/record_browser.vim
[ on_any_buffer_window_enter] ...
[ ] save invoker position
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 170
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan/record_browser.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('297'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon/oscan" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 171
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('298'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon/oscan" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 16
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget16
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 172
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 16
[ base.select >> window#select] ...
[ base.select] id = 16
[ window#load_selected] ...
[ window#select] id = 16
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 173
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget16
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget16
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget16
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget16
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget16
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget16
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget16
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget16
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ s:result_select >> window#save_selected] ...
[ s:result_select >> base.select] selecting...
[ s:result_select >> base.select >> window#select] id = 16
[ s:result_select >> base.select >> window#select] ...
[ s:result_select >> base.select] id = 16
[ s:result_select >> window#load_selected] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Result window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ s:result_select >> on_window_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ s:result_select >> on_window_leave] call object.on_tab_leave()
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ s:result_select >> on_window_leave] ...
[ s:result_select >> window#load_selected] ...
[ s:result_select >> on_any_buffer_enter] buffer name:oscan/record.vim
[ s:result_select >> on_any_buffer_enter] in_create_widget_state:0
[ s:result_select >> on_any_buffer_enter] b:widget not found
[ s:result_select >> on_any_buffer_enter] ...
[ s:result_select >> on_any_buffer_window_enter] name: oscan/record.vim
[ s:result_select >> on_any_buffer_window_enter] ...
[ s:result_select] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:windows
[ on_any_window_enter] name: oscan/extractor/changes.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/extractor/changes.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: widget/edit_line_window.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:widget/edit_line_window.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: widget/base.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:widget/base.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan/record_browser.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/record_browser.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan/record.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/record.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ ] create new tab page
[ on_any_window_enter] name: oscan/record.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('297'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select window to be active', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 174
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('298'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select window to be active', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 17
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget17
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 175
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 17
[ base.select >> window#select] ...
[ base.select] id = 17
[ window#load_selected] ...
[ window#select] id = 17
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 176
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget17
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget17
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget17
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget17
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget17
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget17
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget17
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget17
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget17
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget17
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget17
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget17
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw_selection] id = 5
[ selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] name: rmwidget17
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget17
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> window#load_selected] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ s:result_select >> window#save_selected] ...
[ s:result_select >> base.select] selecting...
[ s:result_select >> base.select >> window#select] id = 17
[ s:result_select >> base.select >> window#select] ...
[ s:result_select >> base.select] id = 17
[ s:result_select >> window#load_selected] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Result window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ s:result_select >> on_window_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ s:result_select >> on_window_leave] call object.on_tab_leave()
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ s:result_select >> on_window_leave] ...
[ s:result_select >> window#load_selected] ...
[ s:result_select >> on_any_window_enter] name: oscan.vim
[ s:result_select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_any_window_enter] ...
[ s:result_select >> on_any_buffer_enter] buffer name:oscan.vim
[ s:result_select >> on_any_buffer_enter] in_create_widget_state:0
[ s:result_select >> on_any_buffer_enter] b:widget not found
[ s:result_select >> on_any_buffer_enter] ...
[ s:result_select] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('297'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 177
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('298'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 18
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget18
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 178
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 18
[ base.select >> window#select] ...
[ base.select] id = 18
[ window#load_selected] ...
[ window#select] id = 18
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 179
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_normal_move ; arguments:
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget5
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 5
[ base.close] closing.. id = 5
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget18
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget18
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 5
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan/record_browser.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan/record_browser.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 18
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_window_enter] name: oscan.vim
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] buffer name:oscan.vim
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ on_any_window_enter] name: oscan/record_browser.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/record_browser.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan/record.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/record.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan/record.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('297'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon/oscan" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 180
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('298'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon/oscan" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget4
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 18
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget18
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 181
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 18
[ base.select >> window#select] ...
[ base.select] id = 18
[ window#load_selected] ...
[ window#select] id = 18
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 182
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_normal_move ; arguments:
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 4
[ base.close] closing.. id = 4
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget18
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget18
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 4
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan/record.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan/record.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 18
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan/record.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('297'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon/oscan" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 183
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('298'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon/oscan" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 18
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget18
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 184
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 18
[ base.select >> window#select] ...
[ base.select] id = 18
[ window#load_selected] ...
[ window#select] id = 18
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 185
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_normal_move ; arguments:
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget5
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 5
[ base.close] closing.. id = 5
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget18
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget18
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 5
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan/record.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan/record.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 18
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan/record.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('297'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon/oscan" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 186
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('298'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon/oscan" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget4
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 18
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget18
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 187
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 18
[ base.select >> window#select] ...
[ base.select] id = 18
[ window#load_selected] ...
[ window#select] id = 18
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 188
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_normal_move ; arguments:
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 4
[ base.close] closing.. id = 4
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget18
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget18
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 4
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan/record.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan/record.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 18
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ on_any_window_enter] name: oscan/record_browser.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/record_browser.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: widget/base.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:widget/base.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:buffers
[ ] create new tab page
[ on_any_window_enter] name: widget/base.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('297'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select buffer to edit', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 189
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('298'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select buffer to edit', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 18
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget18
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 190
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 18
[ base.select >> window#select] ...
[ base.select] id = 18
[ window#load_selected] ...
[ window#select] id = 18
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 191
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget18
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget18
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget18
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget18
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget18
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget18
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget18
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget18
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ s:result_select >> window#save_selected] ...
[ s:result_select >> base.select] selecting...
[ s:result_select >> base.select >> window#select] id = 18
[ s:result_select >> base.select >> window#select] ...
[ s:result_select >> base.select] id = 18
[ s:result_select >> window#load_selected] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Result window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ s:result_select >> on_window_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ s:result_select >> on_window_leave] call object.on_tab_leave()
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ s:result_select >> on_window_leave] ...
[ s:result_select >> window#load_selected >> on_any_window_enter] name: widget/base.vim
[ s:result_select >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> window#load_selected >> on_any_window_enter] ...
[ s:result_select >> window#load_selected >> on_any_buffer_enter] buffer name:widget/base.vim
[ s:result_select >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ s:result_select >> window#load_selected >> on_any_buffer_enter] b:widget not found
[ s:result_select >> window#load_selected >> on_any_buffer_enter] ...
[ s:result_select >> window#load_selected] ...
[ s:result_select >> on_any_buffer_enter] buffer name:/Users/mykolagolubyev/.vim/plugin/oscan.vim
[ s:result_select >> on_any_buffer_enter] in_create_widget_state:0
[ s:result_select >> on_any_buffer_enter] b:widget not found
[ s:result_select >> on_any_buffer_enter] ...
[ s:result_select >> on_any_buffer_window_enter] name: /Users/mykolagolubyev/.vim/plugin/oscan.vim
[ s:result_select >> on_any_buffer_window_enter] ...
[ s:result_select] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: /Users/mykolagolubyev/.vim/plugin/oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('297'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/plugin" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 192
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('298'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/plugin" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 19
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget19
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 193
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 19
[ base.select >> window#select] ...
[ base.select] id = 19
[ window#load_selected] ...
[ window#select] id = 19
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 194
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_normal_move ; arguments:
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget5
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 5
[ base.close] closing.. id = 5
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget19
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget19
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 5
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:oscan.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 19
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_window_enter] name: /Users/mykolagolubyev/.vim/plugin/oscan.vim
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] buffer name:/Users/mykolagolubyev/.vim/plugin/oscan.vim
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan/record_browser.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/record_browser.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan/record.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/record.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan/extractor/changes.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/extractor/changes.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan/extractor/changes.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('297'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon/oscan/extractor" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 195
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('298'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon/oscan/extractor" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget4
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 19
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget19
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 196
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 19
[ base.select >> window#select] ...
[ base.select] id = 19
[ window#load_selected] ...
[ window#select] id = 19
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 197
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] name: rmwidget19
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget19
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] name: rmwidget19
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget19
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] name: rmwidget19
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget19
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> window#load_selected] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget19
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] name: rmwidget19
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget19
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> window#load_selected] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ s:result_select >> window#save_selected] ...
[ s:result_select >> base.select] selecting...
[ s:result_select >> base.select >> window#select] id = 19
[ s:result_select >> base.select >> window#select] ...
[ s:result_select >> base.select] id = 19
[ s:result_select >> window#load_selected] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Result window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ s:result_select >> on_window_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ s:result_select >> on_window_leave] call object.on_tab_leave()
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ s:result_select >> on_window_leave] ...
[ s:result_select >> window#load_selected >> on_any_window_enter] name: oscan/extractor/changes.vim
[ s:result_select >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> window#load_selected >> on_any_window_enter] ...
[ s:result_select >> window#load_selected >> on_any_buffer_enter] buffer name:oscan/extractor/changes.vim
[ s:result_select >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ s:result_select >> window#load_selected >> on_any_buffer_enter] b:widget not found
[ s:result_select >> window#load_selected >> on_any_buffer_enter] ...
[ s:result_select >> window#load_selected] ...
[ s:result_select >> on_any_buffer_enter] buffer name:oscan/extractor/search.vim
[ s:result_select >> on_any_buffer_enter] in_create_widget_state:0
[ s:result_select >> on_any_buffer_enter] b:widget not found
[ s:result_select >> on_any_buffer_enter] ...
[ s:result_select >> on_any_buffer_window_enter] name: oscan/extractor/search.vim
[ s:result_select >> on_any_buffer_window_enter] ...
[ s:result_select] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: oscan/extractor/search.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('297'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon/oscan/extractor" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 198
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('298'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon/oscan/extractor" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget4
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 20
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget20
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 199
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 20
[ base.select >> window#select] ...
[ base.select] id = 20
[ window#load_selected] ...
[ window#select] id = 20
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 200
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] name: rmwidget20
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget20
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> window#load_selected] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] name: rmwidget20
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget20
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> window#load_selected] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] name: rmwidget20
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget20
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> window#load_selected] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] name: rmwidget20
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget20
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> window#load_selected] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_leave] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_window_enter] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw_selection >> base.select >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_leave] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] name: rmwidget20
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_window_enter] ...
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget20
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw_selection >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw_selection >> window#load_selected] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_normal_move ; arguments:
[ ] close_all
[ base.close >> window#save_selected] ...
[ base.close >> base.select] selecting...
[ base.close >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> base.select >> window#select >> on_window_leave] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] name: rmwidget4
[ base.close >> base.select >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> base.select >> window#select >> on_any_window_enter] ...
[ base.close >> base.select >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ base.close >> base.select >> window#select >> on_window_enter] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ base.close >> base.select >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ base.close >> base.select >> window#select >> on_any_buffer_enter] call object.on_setup()
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ base.close >> base.select >> window#select >> on_any_buffer_enter] ...
[ base.close >> base.select >> window#select] ...
[ base.close >> base.select] id = 4
[ base.close] closing.. id = 4
[ base.close >> on_window_leave] already closed
[ base.close >> on_window_leave] ...
[ base.close >> on_buffer_win_leave] widget for close set up
[ base.close >> on_buffer_win_leave] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] already closed
[ base.close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_buffer_win_leave] ...
[ base.close >> on_any_window_enter] name: rmwidget20
[ base.close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> on_any_window_enter] ...
[ base.close >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ base.close >> on_window_enter] ...
[ base.close >> on_any_buffer_enter] buffer name:rmwidget20
[ base.close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ base.close >> on_any_buffer_enter] call object.on_setup()
[ base.close >> on_any_buffer_enter] ...
[ base.close >> window#load_selected] ...
[ base.close] id#release pool = railmoon_widget_id; id = 4
[ base.close] call back for widget. name:Result window; method:on_close ; arguments:
[ base.close] call object.on_close()
[ base.close >> common_widget_callback.on_close] tabclose
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ base.close >> common_widget_callback.on_close >> on_window_leave] call object.on_tab_leave()
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ base.close >> common_widget_callback.on_close >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ base.close >> common_widget_callback.on_close >> on_window_leave] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] name: widget/edit_line_window.vim
[ base.close >> common_widget_callback.on_close >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] buffer name:widget/edit_line_window.vim
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] widget for close set up
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Tag enter window; method:on_close_with_tab_page ; arguments:
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 20
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> on_buffer_win_leave] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_window_enter] name: oscan/extractor/search.vim
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_window_enter] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] buffer name:oscan/extractor/search.vim
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] b:widget not found
[ base.close >> common_widget_callback.on_close >> window#load_selected >> on_any_buffer_enter] ...
[ base.close >> common_widget_callback.on_close >> window#load_selected] ...
[ base.close >> common_widget_callback.on_close] ...
[ base.close >> s:close_ready_for_close_widgets()] ...
[ base.close] ...
[ on_any_window_enter] name: widget/edit_line_window.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:widget/edit_line_window.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: /Users/mykolagolubyev/.vim/plugin/oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:/Users/mykolagolubyev/.vim/plugin/oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan/record_browser.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/record_browser.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: widget/edit_line_window.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:widget/edit_line_window.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:changes
[ on_any_window_enter] name: oscan/extractor/search.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/extractor/search.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: widget/edit_line_window.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:widget/edit_line_window.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:files
[ ] create new tab page
[ on_any_window_enter] name: widget/edit_line_window.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('297'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon/widget" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 201
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('298'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select file from "/Users/mykolagolubyev/.vim/autoload/railmoon/widget" directory to open', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 20
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget20
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 202
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 20
[ base.select >> window#select] ...
[ base.select] id = 20
[ window#load_selected] ...
[ window#select] id = 20
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 203
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget20
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget20
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget20
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget20
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget20
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget20
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget20
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget20
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget20
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget20
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget20
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget20
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ s:result_select >> window#save_selected] ...
[ s:result_select >> base.select] selecting...
[ s:result_select >> base.select >> window#select] id = 20
[ s:result_select >> base.select >> window#select] ...
[ s:result_select >> base.select] id = 20
[ s:result_select >> window#load_selected] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Result window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ s:result_select >> on_window_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ s:result_select >> on_window_leave] call object.on_tab_leave()
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ s:result_select >> on_window_leave] ...
[ s:result_select >> window#load_selected >> on_any_window_enter] name: widget/edit_line_window.vim
[ s:result_select >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> window#load_selected >> on_any_window_enter] ...
[ s:result_select >> window#load_selected >> on_any_buffer_enter] buffer name:widget/edit_line_window.vim
[ s:result_select >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ s:result_select >> window#load_selected >> on_any_buffer_enter] b:widget not found
[ s:result_select >> window#load_selected >> on_any_buffer_enter] ...
[ s:result_select >> window#load_selected] ...
[ s:result_select >> on_any_buffer_enter] buffer name:widget/base.vim
[ s:result_select >> on_any_buffer_enter] in_create_widget_state:0
[ s:result_select >> on_any_buffer_enter] b:widget not found
[ s:result_select >> on_any_buffer_enter] ...
[ s:result_select >> on_any_buffer_window_enter] name: widget/base.vim
[ s:result_select >> on_any_buffer_window_enter] ...
[ s:result_select] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:changes
[ ] create new tab page
[ on_any_window_enter] name: widget/base.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('297'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select recently changed lines to jump to', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 204
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('124'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('125'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('125'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('298'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('124'), 'titlename': 'Select recently changed lines to jump to', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('124'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('125'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 21
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget21
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 205
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 21
[ base.select >> window#select] ...
[ base.select] id = 21
[ window#load_selected] ...
[ window#select] id = 21
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 206
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ s:result_select >> window#save_selected] ...
[ s:result_select >> base.select] selecting...
[ s:result_select >> base.select >> window#select] id = 21
[ s:result_select >> base.select >> window#select] ...
[ s:result_select >> base.select] id = 21
[ s:result_select >> window#load_selected] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Result window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ s:result_select >> on_window_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ s:result_select >> on_window_leave] call object.on_tab_leave()
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ s:result_select >> on_window_leave] ...
[ s:result_select >> window#load_selected >> on_any_window_enter] name: widget/base.vim
[ s:result_select >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> window#load_selected >> on_any_window_enter] ...
[ s:result_select >> window#load_selected >> on_any_buffer_enter] buffer name:widget/base.vim
[ s:result_select >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ s:result_select >> window#load_selected >> on_any_buffer_enter] b:widget not found
[ s:result_select >> window#load_selected >> on_any_buffer_enter] ...
[ s:result_select >> window#load_selected] ...
[ s:result_select] ...
[ on_any_window_enter] name: /Users/mykolagolubyev/.vim/plugin/oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:/Users/mykolagolubyev/.vim/plugin/oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ ] save invoker position
[ window#save_selected] ...
[ ] create tag browser:changes
[ ] create new tab page
[ on_any_window_enter] name: oscan.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: 
[ on_any_buffer_window_enter] ...
[ on_any_buffer_enter] buffer name:/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_buffer_window_enter] ...
[ ] create available_tags_window
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ ] create base:Available tags window
[ ] {'select': function('336'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('337'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 4
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget4
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Available tags window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('337'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('297'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 4, 'selection_up': function('40'), 'name': 'Available tags window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('336'), 'titlename': 'Select recently changed lines to jump to', 'scrool_to': function('38'), 'draw': function('36')}
[ selection_window.draw >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 207
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] create result_window
[ on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: /Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ ] create base:Result window
[ ] {'select': function('336'), 'draw': function('36'), 'selection_down': function('39'), 'draw_selection': function('37'), 'close': function('337'), 'select_line': function('41'), 'scrool_to': function('38'), 'selection_up': function('40'), 'select_item': function('42'), 'selected_item': function('43')}
[ ] id#acquire pool = railmoon_widget_id; id = 5
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget5
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create selection_window:Result window
[ ] {'child_callback_object': {'on_setup': function('35')}, 'close': function('337'), 'callback_object': {'on_tab_leave': function('295'), 'on_close': function('294'), 'on_select': function('298'), 'on_close_with_tab_page': function('296')}, 'is_closed': 0, 'select_item': function('42'), 'selected_item': function('43'), 'id': 5, 'selection_up': function('40'), 'name': 'Result window', 'select_line': function('41'), 'draw_selection': function('37'), 'selection_down': function('39'), 'select': function('336'), 'titlename': 'Select recently changed lines to jump to', 'scrool_to': function('38'), 'draw': function('36')}
[ ] create tag_enter_window
[ on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ on_window_leave] ...
[ on_any_window_enter] name: rmwidget5
[ on_any_window_enter] handle autocommands stoped
[ on_any_window_enter] ...
[ on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ on_window_enter] ...
[ ] create base:Tag enter window
[ ] {'select': function('336'), 'go_to_position': function('48'), 'get_line': function('46'), 'close': function('337'), 'go_to_start': function('50'), 'go_to_end': function('49'), 'set_line': function('47')}
[ ] id#acquire pool = railmoon_widget_id; id = 22
[ on_any_buffer_enter] handle autocommands stoped
[ on_any_buffer_enter] ...
[ on_any_buffer_window_enter] name: rmwidget22
[ on_any_buffer_window_enter] handle autocommands stoped
[ on_any_buffer_window_enter] ...
[ ] create edit line window:Tag enter window
[ window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 208
[ window#save_selected] ...
[ base.select] selecting...
[ base.select >> window#select] id = 22
[ base.select >> window#select] ...
[ base.select] id = 22
[ window#load_selected] ...
[ window#select] id = 22
[ window#select] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] id#acquire pool = railmoon_window_mark_id; id = 209
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget22
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget22
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget22
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget22
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget5
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Result window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget5
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Result window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 5
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Result window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget22
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget22
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#select >> on_window_leave] ...
[ selection_window.draw >> window#select >> on_any_window_enter] name: rmwidget4
[ selection_window.draw >> window#select >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#select >> on_any_window_enter] ...
[ selection_window.draw >> window#select >> on_window_enter] call back for widget. name:Available tags window; method:on_focus ; arguments:
[ selection_window.draw >> window#select >> on_window_enter] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] buffer name:rmwidget4
[ selection_window.draw >> window#select >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#select >> on_any_buffer_enter] call back for widget. name:Available tags window; method:on_setup ; arguments:
[ selection_window.draw >> window#select >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw >> window#load_selected] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter >> selection_window.draw] ...
[ selection_window.draw >> window#select >> on_any_buffer_enter] ...
[ selection_window.draw >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#save_selected] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] selecting...
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> base.select >> window#select] ...
[ selection_window.draw >> selection_window.draw_selection >> base.select] id = 4
[ selection_window.draw >> selection_window.draw_selection >> window#load_selected] ...
[ selection_window.draw >> window#load_selected >> on_window_leave] call back for widget. name:Available tags window; method:on_focus_lost ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_leave] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] name: rmwidget22
[ selection_window.draw >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ selection_window.draw >> window#load_selected >> on_any_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_window_enter] call back for widget. name:Tag enter window; method:on_focus ; arguments:
[ selection_window.draw >> window#load_selected >> on_window_enter] ...
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] buffer name:rmwidget22
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call back for widget. name:Tag enter window; method:on_setup ; arguments:
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] call object.on_setup()
[ selection_window.draw >> window#load_selected >> on_any_buffer_enter] ...
[ selection_window.draw >> window#load_selected] ...
[ selection_window.draw] ...
[ ] call back for widget. name:Tag enter window; method:on_insert_move ; arguments:
[ ] call object.on_insert_move()
[ s:result_select >> window#save_selected] ...
[ s:result_select >> base.select] selecting...
[ s:result_select >> base.select >> window#select] id = 22
[ s:result_select >> base.select >> window#select] ...
[ s:result_select >> base.select] id = 22
[ s:result_select >> window#load_selected] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Available tags window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 4
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_buffer_win_leave] widget for close set up
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] s:widget_for_close exists
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call back for widget. name:Result window; method:on_close_with_tab_page ; arguments:
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] call object.on_close_with_tab_page()
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets() >> common_widget_callback.on_close_with_tab_page] ...
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] id#release pool = railmoon_widget_id; id = 5
[ s:result_select >> on_buffer_win_leave >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> on_buffer_win_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_focus_lost ; arguments:
[ s:result_select >> on_window_leave] ...
[ s:result_select >> on_window_leave] call back for widget. name:Tag enter window; method:on_tab_leave ; arguments:
[ s:result_select >> on_window_leave] call object.on_tab_leave()
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] leaving tab
[ s:result_select >> on_window_leave >> common_widget_callback.on_tab_leave] ...
[ s:result_select >> on_window_leave] ...
[ s:result_select >> window#load_selected >> on_any_window_enter] name: oscan.vim
[ s:result_select >> window#load_selected >> on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ s:result_select >> window#load_selected >> on_any_window_enter] ...
[ s:result_select >> window#load_selected >> on_any_buffer_enter] buffer name:oscan.vim
[ s:result_select >> window#load_selected >> on_any_buffer_enter] in_create_widget_state:0
[ s:result_select >> window#load_selected >> on_any_buffer_enter] b:widget not found
[ s:result_select >> window#load_selected >> on_any_buffer_enter] ...
[ s:result_select >> window#load_selected] ...
[ s:result_select] ...
[ on_any_window_enter] name: oscan/record_browser.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/record_browser.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...
[ on_any_window_enter] name: oscan/record.vim
[ on_any_window_enter >> s:close_ready_for_close_widgets()] ...
[ on_any_window_enter] ...
[ on_any_buffer_enter] buffer name:oscan/record.vim
[ on_any_buffer_enter] in_create_widget_state:0
[ on_any_buffer_enter] b:widget not found
[ on_any_buffer_enter] ...